/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <4 4>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                                         &kp N6    &kp N7    &kp N8     &kp N9     &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W      &kp E     &kp R     &kp T                                          &kp Y     &kp U     &kp I      &kp O      &kp P     &kp BSPC
&kp ESC    &kp A   &kp S      &kp D     &kp F     &kp G                                          &kp H     &kp J     &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V     &kp B                 &kp C_MUTE    &none      &kp N     &kp M     &kp COMMA  &kp DOT    &kp FSLH  &kp RET
                   &kp LCTRL  &kp LALT  &kp LGUI  &kp LS(LC(LA(LGUI)))  &mo 1         &kp SPACE  &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_1 {
            bindings = <
&none   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &kp EQUAL
&none   &none   &none   &none   &none   &kp F11                   &kp F12   &none     &none   &none      &none    &kp LBKT
&none   &none   &none   &none   &mo 2   &mo 3                     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none    &kp LBRC
&trans  &none   &none   &none   &none   &none    &none     &none  &none     &none     &none   &none      &none    &kp BSLH
                &none   &none   &none   &none    &trans    &mo 4  &none     &none     &none   &none
            >;
        };

        layer_2 {
            bindings = <
&none  &none  &none  &none  &none   &none                    &none  &none   &none   &none   &none  &none
&none  &none  &none  &none  &none   &none                    &none  &kp N7  &kp N8  &kp N9  &none  &none
&none  &none  &none  &none  &trans  &trans                   &none  &kp N4  &kp N5  &kp N6  &none  &none
&none  &none  &none  &none  &none   &none   &none     &none  &none  &kp N1  &kp N2  &kp N3  &none  &none
              &none  &none  &none   &none   &trans    &none  &none  &none   &none   &none
            >;
        };

        layer_3 {
            bindings = <
&none   &none  &none  &none  &none   &none                    &none         &none         &none         &none         &none  &none
&none   &none  &none  &none  &none   &none                    &none         &none         &none         &none         &none  &none
&none   &none  &none  &none  &trans  &trans                   &kp LS(PLUS)  &kp LS(RBKT)  &kp LS(RBRC)  &kp LS(PIPE)  &none  &none
&trans  &none  &none  &none  &none   &none   &none     &none  &kp EQUAL     &kp LBKT      &kp LBRC      &kp BSLH      &none  &none
               &none  &none  &none   &none   &trans    &none  &none         &none         &none         &none
            >;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
